<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Fri Mar 10 09:42:20 PST 2006
  Author:  ykuntawa
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="HelpDeskServiceRequest"
         targetNamespace="http://xmlns.oracle.com/HelpDeskServiceRequest"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:wfcommon="http://xmlns.oracle.com/bpel/workflow/common"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:client="http://xmlns.oracle.com/HelpDeskServiceRequest"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:taskservice="http://xmlns.oracle.com/bpel/workflow/taskService"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns1="http://www.mycompany.com/ns/sr"
         xmlns:ns2="http://xmlns.oracle.com/ias/pcbpel/NotificationService"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:task="http://xmlns.oracle.com/bpel/workflow/task"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc">
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="client"
                     partnerLinkType="client:HelpDeskServiceRequest"
                     myRole="HelpDeskServiceRequestProvider"
                     partnerRole="HelpDeskServiceRequestRequester"/>
        <partnerLink myRole="TaskServiceCallbackListener" name="TaskService"
                     partnerRole="TaskService"
                     partnerLinkType="taskservice:TaskService"/>
        <partnerLink name="NotificationService"
                     partnerRole="NotificationServiceProvider"
                     partnerLinkType="ns2:NotificationServiceLink"/>
    </partnerLinks>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable"
                  messageType="client:HelpDeskServiceRequestRequestMessage"/>
        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable"
                  messageType="client:HelpDeskServiceRequestResponseMessage"/>
        <variable name="HelpDeskRequestWF_globalVariable"
                  messageType="taskservice:taskMessage"/>
    </variables>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in HelpDeskServiceRequest.wsdl) -->
        <receive name="receiveInput" partnerLink="client"
                 portType="client:HelpDeskServiceRequest" operation="initiate"
                 variable="inputVariable" createInstance="yes"/>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <scope name="HelpDeskRequestWF"
               xmlns:wf="http://schemas.oracle.com/bpel/extension/workflow"
               wf:key="HelpDeskRequestWF_globalVariable">
            <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                <bpelx:pattern patternName="bpelx:workflow"></bpelx:pattern>
            </bpelx:annotation>
            <variables>
                <variable name="initiateTaskInput"
                          messageType="taskservice:initiateTaskMessage"/>
                <variable name="initiateTaskResponseMessage"
                          messageType="taskservice:initiateTaskResponseMessage"/>
            </variables>
            <correlationSets>
                <correlationSet name="WorkflowTaskIdCor"
                                properties="taskservice:taskId"/>
            </correlationSets>
            <sequence>
                <assign name="HelpDeskRequestWF_AssignTaskAttributes">
                    <copy>
                        <from expression="concat(ora:getProcessURL(), string('/HelpDeskRequestWF/HelpDeskRequestWF.task'))"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:taskDefinitionURI"/>
                    </copy>
                    <copy>
                        <from expression="concat(string('Help desk request for '), bpws:getVariableData('inputVariable','payload','/ns1:HelpDeskRequest/ns1:requester/ns1:ID'))"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:title"/>
                    </copy>
                    <copy>
                        <from expression="number(3)"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:priority"/>
                    </copy>
                    <copy>
                        <from variable="inputVariable" part="payload"
                              query="/ns1:HelpDeskRequest/ns1:requester/ns1:ID"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:creator"/>
                    </copy>
                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                        <bpelx:from variable="inputVariable" part="payload"
                                    query="/ns1:HelpDeskRequest/ns1:requester"/>
                        <bpelx:to variable="initiateTaskInput" part="payload"     
                                  query="/taskservice:initiateTask/task:task/task:payload"/>      <!--  same -->
                    </bpelx:append>
                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                        <bpelx:from expression="ora:genEmptyElem('task:location')"/>
                        <bpelx:to variable="initiateTaskInput" part="payload"
                                  query="/taskservice:initiateTask/task:task/task:payload"/>     <!--  same -->
                    </bpelx:append>
                    <copy>
                        <from variable="inputVariable" part="payload"
                              query="/ns1:HelpDeskRequest/ns1:location"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:payload/task:location"/>
                    </copy>
                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                        <bpelx:from expression="ora:genEmptyElem('task:type')"/>
                        <bpelx:to variable="initiateTaskInput" part="payload"
                                  query="/taskservice:initiateTask/task:task/task:payload"/>
                    </bpelx:append>
                    <copy>
                        <from variable="inputVariable" part="payload"
                              query="/ns1:HelpDeskRequest/ns1:type"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:payload/task:type"/>
                    </copy>
                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                        <bpelx:from expression="ora:genEmptyElem('task:problemDescription')"/>
                        <bpelx:to variable="initiateTaskInput" part="payload"
                                  query="/taskservice:initiateTask/task:task/task:payload"/>
                    </bpelx:append>
                    <copy>
                        <from variable="inputVariable" part="payload"
                              query="/ns1:HelpDeskRequest/ns1:problemDescription"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:payload/task:problemDescription"/>
                    </copy>
                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                        <bpelx:from expression="ora:genEmptyElem('task:severity')"/>
                        <bpelx:to variable="initiateTaskInput" part="payload"
                                  query="/taskservice:initiateTask/task:task/task:payload"/>
                    </bpelx:append>
                    <copy>
                        <from variable="inputVariable" part="payload"
                              query="/ns1:HelpDeskRequest/ns1:severity"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:payload/task:severity"/>
                    </copy>
                </assign>
                <assign name="HelpDeskRequestWF_AssignSystemTaskAttributes">
                    <copy>
                        <from expression="ora:getInstanceId()"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:processInfo/task:instanceId"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessId()"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:processInfo/task:processName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessId()"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:processInfo/task:processId"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessVersion()"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:processInfo/task:processVersion"/>
                    </copy>
                    <copy>
                        <from expression="ora:getDomainId()"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:processInfo/task:domainId"/>
                    </copy>
                    <copy>
                        <from expression="string('BPEL')"/>
                        <to variable="initiateTaskInput" part="payload"
                            query="/taskservice:initiateTask/task:task/task:processInfo/task:processType"/>
                    </copy>
                </assign>
                <invoke name="initiateTask" partnerLink="TaskService"
                        portType="taskservice:TaskService"
                        operation="initiateTask"
                        inputVariable="initiateTaskInput"
                        outputVariable="initiateTaskResponseMessage">
                    <correlations>
                        <correlation initiate="yes" set="WorkflowTaskIdCor"
                                     pattern="in"/>
                    </correlations>
                </invoke>
                <receive name="receiveCompletedTask" partnerLink="TaskService"
                         portType="taskservice:TaskServiceCallback"
                         operation="onTaskCompleted"
                         variable="HelpDeskRequestWF_globalVariable"
                         createInstance="no">
                    <correlations>
                        <correlation initiate="no" set="WorkflowTaskIdCor"/>
                    </correlations>
                </receive>
            </sequence>
        </scope>
        <switch name="taskSwitch">
            <case condition="bpws:getVariableData('HelpDeskRequestWF_globalVariable', 'payload', '/task:task/task:systemAttributes/task:state') = 'COMPLETED' and bpws:getVariableData('HelpDeskRequestWF_globalVariable', 'payload', '/task:task/task:systemAttributes/task:outcome') = 'UNRESOLVED'">
                <bpelx:annotation>
                    <bpelx:pattern>Task outcome is UNRESOLVED</bpelx:pattern>
                </bpelx:annotation>
                <sequence>
                    <assign>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/ns1:requester"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:requester"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:location"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:location"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:type"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:type"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:problemDescription"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:problemDescription"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:severity"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:severity"/>
                        </copy>
                        <copy>
                            <from expression="string('Unresolved')"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:status"/>
                        </copy>
                    </assign>
                </sequence>
            </case>
            <case condition="bpws:getVariableData('HelpDeskRequestWF_globalVariable', 'payload', '/task:task/task:systemAttributes/task:state') = 'COMPLETED' and bpws:getVariableData('HelpDeskRequestWF_globalVariable', 'payload', '/task:task/task:systemAttributes/task:outcome') = 'RESOLVED'">
                <bpelx:annotation>
                    <bpelx:pattern>Task outcome is RESOLVED</bpelx:pattern>
                </bpelx:annotation>
                <sequence>
                    <assign>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/ns1:requester"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:requester"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:location"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:location"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:type"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:type"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:problemDescription"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:problemDescription"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:severity"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:severity"/>
                        </copy>
                        <copy>
                            <from expression="string('Resolved')"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:status"/>
                        </copy>
                    </assign>
                </sequence>
            </case>
            <otherwise>
                <bpelx:annotation>
                    <bpelx:pattern>Task is outcome is EXPIRED, STALE, WITHDRAWN or ERRORED</bpelx:pattern>
                </bpelx:annotation>
                <sequence>
                    <assign>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/ns1:requester"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:requester"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:location"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:location"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:type"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:type"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:problemDescription"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:problemDescription"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:severity"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:severity"/>
                        </copy>
                        <copy>
                            <from expression="string('Expired')"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:status"/>
                        </copy>
                        <copy>
                            <from variable="HelpDeskRequestWF_globalVariable"
                                  part="payload"
                                  query="/task:task/task:payload/task:resolution"/>
                            <to variable="inputVariable" part="payload"
                                query="/ns1:HelpDeskRequest/ns1:resolution"/>
                        </copy>
                    </assign>
                </sequence>
            </otherwise>
        </switch>
        <assign name="OutputCopy">
            <copy>
                <from variable="inputVariable" part="payload"
                      query="/ns1:HelpDeskRequest"/>
                <to variable="outputVariable" part="payload"
                    query="/ns1:HelpDeskRequest"/>
            </copy>
        </assign>
        <scope name="NotificationScope">
            <faultHandlers>
                <catchAll/>
            </faultHandlers>
            <sequence name="Sequence_3">
                <switch name="Switch_1">
                    <case condition="bpws:getVariableData('outputVariable','payload','/ns1:HelpDeskRequest/ns1:requester/ns1:phone') != string('')  or bpws:getVariableData('outputVariable','payload','/ns1:HelpDeskRequest/ns1:requester/ns1:Email')  != string('')">
                        <sequence name="Sequence_2">
                            <empty name="add"/>
                            <flow name="NotificationFlow">
                                <sequence name="Sequence_4">
                                    <switch name="Switch_3">
                                        <case condition="bpws:getVariableData('outputVariable','payload','/ns1:HelpDeskRequest/ns1:requester/ns1:Email') != string('')">
                                            <scope name="Email_1">
                                                <bpelx:annotation>
                                                    <bpelx:pattern patternName="bpelx:email"></bpelx:pattern>
                                                </bpelx:annotation>
                                                <variables>
                                                    <variable name="varNotificationReq"
                                                              messageType="ns2:EmailNotificationRequest"/>
                                                    <variable name="varNotificationResponse"
                                                              messageType="ns2:ArrayOfResponse"/>
                                                    <variable name="NotificationServiceFaultVariable"
                                                              messageType="ns2:NotificationServiceErrorMessage"/>
                                                </variables>
                                                <sequence name="Sequence_5">
                                                    <assign name="EmailParamsAssign">
                                                        <copy>
                                                            <from expression='"Default"'/>
                                                            <to variable="varNotificationReq"
                                                                part="EmailPayload"
                                                                query="/EmailPayload/ns2:FromAccountName"/>
                                                        </copy>
                                                        <copy>
                                                            <from expression="string('')"/>
                                                            <to variable="varNotificationReq"
                                                                part="EmailPayload"
                                                                query="/EmailPayload/ns2:Bcc"/>
                                                        </copy>
                                                        <copy>
                                                            <from expression="string('')"/>
                                                            <to variable="varNotificationReq"
                                                                part="EmailPayload"
                                                                query="/EmailPayload/ns2:Cc"/>
                                                        </copy>
                                                        <copy>
                                                            <from expression="string('')"/>
                                                            <to variable="varNotificationReq"
                                                                part="EmailPayload"
                                                                query="/EmailPayload/ns2:ReplyToAddress"/>
                                                        </copy>
                                                        <copy>
                                                            <from expression="concat(&quot;Service request for &quot;,bpws:getVariableData('outputVariable','payload','/ns1:HelpDeskRequest/ns1:type'))"/>
                                                            <to variable="varNotificationReq"
                                                                part="EmailPayload"
                                                                query="/EmailPayload/ns2:Subject"/>
                                                        </copy>
                                                        <copy>
                                                            <from expression="bpws:getVariableData('outputVariable','payload','/ns1:HelpDeskRequest/ns1:requester/ns1:Email')"/>
                                                            <to variable="varNotificationReq"
                                                                part="EmailPayload"
                                                                query="/EmailPayload/ns2:To"/>
                                                        </copy>
                                                        <copy>
                                                            <from expression="concat(&quot;Your service is &quot;,bpws:getVariableData('outputVariable','payload','/ns1:HelpDeskRequest/ns1:status'),&quot; for problem &amp;quot;  &quot;,bpws:getVariableData('outputVariable','payload','/ns1:HelpDeskRequest/ns1:problemDescription'),&quot;  &amp;quot;&quot;)"/>
                                                            <to variable="varNotificationReq"
                                                                part="EmailPayload"
                                                                query="/EmailPayload/ns2:Content/ns2:ContentBody"/>
                                                        </copy>
                                                        <copy>
                                                            <from expression="string('text/html; charset=UTF-8')"/>
                                                            <to variable="varNotificationReq"
                                                                part="EmailPayload"
                                                                query="/EmailPayload/ns2:Content/ns2:MimeType"/>
                                                        </copy>
                                                    </assign>
                                                    <invoke name="InvokeNotificationService"
                                                            partnerLink="NotificationService"
                                                            portType="ns2:NotificationService"
                                                            operation="sendEmailNotification"
                                                            inputVariable="varNotificationReq"
                                                            outputVariable="varNotificationResponse"/>
                                                </sequence>
                                            </scope>
                                        </case>
                                        <otherwise/>
                                    </switch>
                                    <empty name="add2"/>
                                </sequence>
                                <sequence name="Sequence_4">
                                    <switch name="Switch_2">
                                        <case condition="bpws:getVariableData('outputVariable','payload','/ns1:HelpDeskRequest/ns1:requester/ns1:phone') != string('')">
                                            <scope name="Voice_1">
                                                <bpelx:annotation>
                                                    <bpelx:pattern patternName="bpelx:voice"></bpelx:pattern>
                                                </bpelx:annotation>
                                                <variables>
                                                    <variable name="varNotificationReq"
                                                              messageType="ns2:VoiceNotificationRequest"/>
                                                    <variable name="varNotificationResponse"
                                                              messageType="ns2:ArrayOfResponse"/>
                                                    <variable name="NotificationServiceFaultVariable"
                                                              messageType="ns2:NotificationServiceErrorMessage"/>
                                                </variables>
                                                <sequence name="Sequence_1">
                                                    <assign name="VoiceParamsAssign">
                                                        <copy>
                                                            <from expression="concat('Your service request for ',bpws:getVariableData('outputVariable','payload','/ns1:HelpDeskRequest/ns1:type'),' is ',bpws:getVariableData('outputVariable','payload','/ns1:HelpDeskRequest/ns1:status'))"/>
                                                            <to variable="varNotificationReq"
                                                                part="VoicePayload"
                                                                query="/VoicePayload/ns2:Content/ns2:ContentBody"/>
                                                        </copy>
                                                        <copy>
                                                            <from expression="string('text/vxml')"/>
                                                            <to variable="varNotificationReq"
                                                                part="VoicePayload"
                                                                query="/VoicePayload/ns2:Content/ns2:MimeType"/>
                                                        </copy>
                                                        <copy>
                                                            <from expression="bpws:getVariableData('outputVariable','payload','/ns1:HelpDeskRequest/ns1:requester/ns1:phone')"/>
                                                            <to variable="varNotificationReq"
                                                                part="VoicePayload"
                                                                query="/VoicePayload/ns2:To"/>
                                                        </copy>
                                                    </assign>
                                                    <invoke name="InvokeNotificationService2"
                                                            partnerLink="NotificationService"
                                                            portType="ns2:NotificationService"
                                                            operation="sendVoiceNotification"
                                                            inputVariable="varNotificationReq"
                                                            outputVariable="varNotificationResponse"/>
                                                </sequence>
                                            </scope>
                                        </case>
                                        <otherwise/>
                                    </switch>
                                   <empty name="add3"/>
                                </sequence>
                            </flow>
                        </sequence>
                    </case>
                    <otherwise/>
                </switch>
            </sequence>
        </scope>
        <invoke name="callbackClient" partnerLink="client"
                portType="client:HelpDeskServiceRequestCallback"
                operation="onResult" inputVariable="outputVariable"/>
    </sequence>
</process>