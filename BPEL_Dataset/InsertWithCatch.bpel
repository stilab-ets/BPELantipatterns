<!--
  ///////////////////////////////////////////////////////////////////////////////////////////// 
  // Oracle JDeveloper BPEL Designer 
  // 
  // Created: Wed Apr 27 14:16:26 PDT 2005
  // Author:  smcritch
  // Purpose: Synchronous BPEL Process
  ///////////////////////////////////////////////////////////////////////////////////////////// 
-->
<process name="InsertWithCatch" targetNamespace="http://xmlns.oracle.com/InsertWithCatch" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/insert/" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/top/InsertWithCatch" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:client="http://xmlns.oracle.com/InsertWithCatch" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"><!-- ================================================================= --><!-- PARTNERLINKS                                                      --><!-- List of services participating in this BPEL process               --><!-- ================================================================= -->
    <partnerLinks><!-- 
            The 'client' role represents the requester of this service. It is 
            used for callback. The location and correlation information associated
            with the client role are automatically set using WS-Addressing.
            -->
        <partnerLink name="client" partnerLinkType="client:InsertWithCatch" myRole="InsertWithCatchProvider"/>
        <partnerLink name="BPELSamples" partnerRole="insert_role" partnerLinkType="ns1:insert_plt"/>
    </partnerLinks><!-- ================================================================= --><!-- VARIABLES                                                         --><!-- List of messages and XML documents used within this BPEL process  --><!-- ================================================================= -->
    <variables><!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable" messageType="client:InsertWithCatchRequestMessage"/><!--  
            Reference to the message that will be returned to the requester
            -->
        <variable name="outputVariable" messageType="client:InsertWithCatchResponseMessage"/>
        <variable name="Invoke_1_insert_InputVariable" messageType="ns1:MoviesCollection_msg"/>
        <variable name="AdapterException" messageType="bpelx:RuntimeFaultMessage"/>
    </variables><!-- ================================================================= --><!-- ORCHESTRATION LOGIC                                               --><!-- Set of activities coordinating the flow of messages across the    --><!-- services integrated within this business process                  --><!-- ================================================================= -->
    <sequence name="main"><!-- Receive input from requestor. 
            Note: This maps to operation defined in InsertWithCatch.wsdl
            -->
        <receive name="receiveInput" partnerLink="client" portType="client:InsertWithCatch" operation="process" variable="inputVariable" createInstance="yes"/><!-- Generate reply to synchronous request -->
        <scope name="Scope_1">
            <faultHandlers>
                <catch faultName="bpelx:bindingFault" faultVariable="AdapterException">
                    <sequence name="Sequence_2">
                        <switch name="Switch_1">
                            <case condition="bpws:getVariableData('AdapterException','code') = &quot;1&quot; or bpws:getVariableData('AdapterException','code') = &quot;-3220&quot;">
                                <bpelx:annotation>
                                    <bpelx:pattern>UniqueConstraintViolation
                                    </bpelx:pattern>
                                </bpelx:annotation>
                                <invoke name="Merge" partnerLink="BPELSamples" portType="ns1:insert_ptt" operation="merge" inputVariable="Invoke_1_insert_InputVariable"/>
                            </case>
                            <otherwise>
                                <sequence name="Sequence_3">
                                    <empty name="sendNotification"/>
                                    <invoke name="Merge" partnerLink="BPELSamples" portType="ns1:insert_ptt" operation="merge" inputVariable="Invoke_1_insert_InputVariable"/>
                                </sequence>
                            </otherwise>
                        </switch>
                    </sequence>
                </catch>
            </faultHandlers>
            <sequence name="Sequence_1">
                <assign name="Assign_1">
                    <copy>
                        <from variable="inputVariable" part="payload"/>
                        <to variable="Invoke_1_insert_InputVariable" part="MoviesCollection"/>
                    </copy>
                </assign>
                <invoke name="Insert" partnerLink="BPELSamples" portType="ns1:insert_ptt" operation="insert" inputVariable="Invoke_1_insert_InputVariable"/>
            </sequence>
        </scope>
        <reply name="replyOutput" partnerLink="client" portType="client:InsertWithCatch" operation="process" variable="outputVariable"/>
    </sequence>
</process>
