<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Apr 20 18:45:43 PDT 2006
  Author:  kmreddy
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="FreeShippingPriceProvider"
         targetNamespace="http://xmlns.oracle.com/FreeShippingPriceProvider"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:wfcommon="http://xmlns.oracle.com/bpel/workflow/common"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:client="http://xmlns.oracle.com/FreeShippingPriceProvider"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:taskservice="http://xmlns.oracle.com/bpel/workflow/taskService"
         xmlns:ns1="http://xmlns.oracle.com/PriceProvider"
         xmlns:ns2="http://xmlns.oracle.com/bpel/services/IdentityService"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:task="http://xmlns.oracle.com/bpel/workflow/task"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="client"
                 partnerLinkType="client:FreeShippingPriceProvider"
                 myRole="FreeShippingPriceProviderProvider"
                 partnerRole="FreeShippingPriceProviderRequester"/>
    <partnerLink myRole="TaskServiceCallbackListener" name="TaskService"
                 partnerRole="TaskService"
                 partnerLinkType="taskservice:TaskService"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable"
              messageType="client:FreeShippingPriceProviderRequestMessage"/>
    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable"
              messageType="client:FreeShippingPriceProviderResponseMessage"/>
    <variable name="PriceRequest_1_globalVariable"
              messageType="taskservice:taskMessage"/>
  </variables>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in FlakyPriceProvider.wsdl) -->
    <receive name="receiveInput" partnerLink="client"
             portType="client:FreeShippingPriceProvider" operation="initiate"
             variable="inputVariable" createInstance="yes"/>
    <!-- Generate reply to synchronous request -->
    <scope name="PriceRequest_1">
      <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
        <bpelx:pattern patternName="bpelx:workflow"></bpelx:pattern>
      </bpelx:annotation>
      <variables>
        <variable name="initiateTaskInput"
                  messageType="taskservice:initiateTaskMessage"/>
        <variable name="initiateTaskResponseMessage"
                  messageType="taskservice:initiateTaskResponseMessage"/>
      </variables>
      <correlationSets>
        <correlationSet name="WorkflowTaskIdCor"
                        properties="taskservice:taskId"/>
      </correlationSets>
      <sequence>
        <assign name="PriceRequest_1_AssignTaskAttributes">
          <copy>
            <from expression="concat(ora:getProcessURL(), string('/PriceRequest/PriceRequest.task'))"/>
            <to variable="initiateTaskInput" part="payload"
                query="/taskservice:initiateTask/task:task/task:taskDefinitionURI"/>
          </copy>
          <copy>
            <from expression="string('Price Request')"/>
            <to variable="initiateTaskInput" part="payload"
                query="/taskservice:initiateTask/task:task/task:title"/>
          </copy>
          <copy>
            <from expression="number(1)"/>
            <to variable="initiateTaskInput" part="payload"
                query="/taskservice:initiateTask/task:task/task:priority"/>
          </copy>
          <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
            <bpelx:from variable="inputVariable" part="payload"/>
            <bpelx:to variable="initiateTaskInput" part="payload"
                      query="/taskservice:initiateTask/task:task/task:payload"/>
          </bpelx:append>
          <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
            <bpelx:from variable="outputVariable" part="payload"/>
            <bpelx:to variable="initiateTaskInput" part="payload"
                      query="/taskservice:initiateTask/task:task/task:payload"/>
          </bpelx:append>
        </assign>
        <assign name="PriceRequest_1_AssignSystemTaskAttributes">
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="initiateTaskInput" part="payload"
                query="/taskservice:initiateTask/task:task/task:processInfo/task:instanceId"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="initiateTaskInput" part="payload"
                query="/taskservice:initiateTask/task:task/task:processInfo/task:processName"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="initiateTaskInput" part="payload"
                query="/taskservice:initiateTask/task:task/task:processInfo/task:processId"/>
          </copy>
          <copy>
            <from expression="ora:getProcessVersion()"/>
            <to variable="initiateTaskInput" part="payload"
                query="/taskservice:initiateTask/task:task/task:processInfo/task:processVersion"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="initiateTaskInput" part="payload"
                query="/taskservice:initiateTask/task:task/task:processInfo/task:domainId"/>
          </copy>
          <copy>
            <from expression="string('BPEL')"/>
            <to variable="initiateTaskInput" part="payload"
                query="/taskservice:initiateTask/task:task/task:processInfo/task:processType"/>
          </copy>
        </assign>
        <invoke name="initiateTask_PriceRequest_1" partnerLink="TaskService"
                portType="taskservice:TaskService" operation="initiateTask"
                inputVariable="initiateTaskInput"
                outputVariable="initiateTaskResponseMessage">
          <correlations>
            <correlation initiate="yes" set="WorkflowTaskIdCor" pattern="in"/>
          </correlations>
        </invoke>
        <receive name="receiveCompletedTask_PriceRequest_1"
                 partnerLink="TaskService"
                 portType="taskservice:TaskServiceCallback"
                 operation="onTaskCompleted"
                 variable="PriceRequest_1_globalVariable" createInstance="no">
          <correlations>
            <correlation initiate="no" set="WorkflowTaskIdCor"/>
          </correlations>
        </receive>
        <assign name="Assign_3">
          <copy>
            <from variable="PriceRequest_1_globalVariable" part="payload"
                  query="/task:task/task:payload/ns1:PriceProviderProcessResponse"/>
            <to variable="outputVariable" part="payload"
                query="/ns1:PriceProviderProcessResponse"/>
          </copy>
        </assign>
      </sequence>
    </scope>
    <switch name="taskSwitch">
      <case condition="bpws:getVariableData('PriceRequest_1_globalVariable', 'payload', '/task:task/task:systemAttributes/task:state') = 'COMPLETED' and bpws:getVariableData('PriceRequest_1_globalVariable', 'payload', '/task:task/task:systemAttributes/task:outcome') = 'OK'">
        <bpelx:annotation>
          <bpelx:pattern>Task outcome is OK</bpelx:pattern>
        </bpelx:annotation>
        <assign name="Assign_2">
          <copy>
            <from expression="0"/>
            <to variable="outputVariable" part="payload"
                query="/ns1:PriceProviderProcessResponse/ns1:shippingCost"/>
          </copy>
        </assign>
      </case>
      <otherwise>
        <bpelx:annotation>
          <bpelx:pattern>Task is outcome is EXPIRED, STALE, WITHDRAWN or ERRORED</bpelx:pattern>
        </bpelx:annotation>
        <assign name="Assign_1">
          <copy>
            <from expression="1000000"/>
            <to variable="outputVariable" part="payload"
                query="/ns1:PriceProviderProcessResponse/ns1:itemPrice"/>
          </copy>
          <copy>
            <from expression="0"/>
            <to variable="outputVariable" part="payload"
                query="/ns1:PriceProviderProcessResponse/ns1:shippingCost"/>
          </copy>
          <copy>
            <from expression="'P7D'"/>
            <to variable="outputVariable" part="payload"
                query="/ns1:PriceProviderProcessResponse/ns1:deliveryTime"/>
          </copy>
        </assign>
      </otherwise>
    </switch>
    <invoke name="Invoke_1" partnerLink="client"
            portType="client:FreeShippingPriceProviderCallback"
            operation="onResult" inputVariable="outputVariable"/>
  </sequence>
</process>
