<?xml version="1.0" encoding="UTF-8"?>
<process
    name="EntityComponentInternalUnsubscribeOrch"
    targetNamespace="urn:gov:hhs:fha:nhinc:gateway:entityinternalorchbpel:entitycomponentinternalunsubscribeorch"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling"
    xmlns:tns="urn:gov:hhs:fha:nhinc:gateway:entityinternalorchbpel:entitycomponentinternalunsubscribeorch" 
    xmlns:ns0="urn:gov:hhs:fha:nhinc:common:subscription" 
    xmlns:ns1="urn:gov:hhs:fha:nhinc:common:nhinccommoninternalorch" 
    xmlns:ns2="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy" xmlns:ns3="http://docs.oasis-open.org/wsn/b-2" xmlns:ns4="urn:gov:hhs:fha:nhinc:common:nhinccommon">
    <import namespace="urn:gov:hhs:fha:nhinc:entitycomponentinternalunsubscribeorch" location="Interfaces/wsdl/EntityComponentInternalUnsubscribeOrch.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" location="Interfaces/wsdl/NhincComponentSubscriptionReferenceRepository.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhincproxysubscriptionmanagement" location="Interfaces/wsdl/NhincProxySubscriptionManagement.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://docs.oasis-open.org/wsrf/rw-2" location="Interfaces/wsdl/rw-2.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" location="Interfaces/wsdl/NhincComponentInternalSubscriptionDte.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <partnerLink name="SubRefRepPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" partnerLinkType="tns:NhincComponentSubscriptionReferenceRepository" partnerRole="NhincComponentSubscriptionReferenceRepositoryPortTypeRole"/>
        <partnerLink name="NhincProxySubscriptionMgmtPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxysubscriptionmanagement" partnerLinkType="tns:NhincProxySubscriptionManager" partnerRole="NhincProxySubscriptionManagerPortTypeRole"/>
        <partnerLink name="SubscriptionDtePL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" partnerLinkType="tns:NhincComponentInternalSubscriptionDte" partnerRole="NhincComponentInternalSubscriptionDtePortTypeRole"/>
        <partnerLink name="EntityUnsubscribeInternalPL" xmlns:tns="urn:gov:hhs:fha:nhinc:entitycomponentinternalunsubscribeorch" partnerLinkType="tns:EntityComponentInternalUnsubscribeOrch" myRole="EntityComponentInternalUnsubscribeOrchPortTypeRole"/>
    </partnerLinks>
    <variables>
        <variable name="UnsubscribeOut" xmlns:tns="urn:gov:hhs:fha:nhinc:entitycomponentinternalunsubscribeorch" messageType="tns:UnsubscribeResponse">
            <sxed:editor>
                <sxed:pseudoComp parentPath="$UnsubscribeOut.UnsubscribeResponse" type="xsd:string" qName="xsd:string" source="to"/>
            </sxed:editor>
        </variable>
        <variable name="UnsubscribeIn" xmlns:tns="urn:gov:hhs:fha:nhinc:entitycomponentinternalunsubscribeorch" messageType="tns:UnsubscribeRequest"/>
    </variables>
    <sequence>
        <receive name="ReceiveUnsubscribeInternal" createInstance="yes" partnerLink="EntityUnsubscribeInternalPL" operation="Unsubscribe" xmlns:tns="urn:gov:hhs:fha:nhinc:entitycomponentinternalunsubscribeorch" portType="tns:EntityComponentInternalUnsubscribeOrchPortType" variable="UnsubscribeIn"/>
        <scope name="UnsubscribeScope">
            <variables>
                <variable name="CreateUnsubscribeResponseOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:CreateUnsubscribeResponseResponseMessage"/>
                <variable name="CreateUnsubscribeResponseIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:CreateUnsubscribeResponseRequestMessage"/>
                <variable name="RetrieveByParentSubscriptionReferenceIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" messageType="tns:RetrieveByParentSubscriptionReferenceRequest"/>
                <variable name="RetrieveByParentSubscriptionReferenceOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" messageType="tns:RetrieveByParentSubscriptionReferenceResponse"/>
                <variable name="DeleteSubscriptionReferenceIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" messageType="tns:DeleteSubscriptionReferenceRequest"/>
                <variable name="DeleteSubscriptionReferenceOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" messageType="tns:DeleteSubscriptionReferenceResponse"/>
                <variable name="SubscriptionReferenceCount" type="xsd:integer"/>
            </variables>
            <faultHandlers>
                <catch faultName="sxeh:systemFault" faultVariable="systemFaultVar" faultMessageType="sxeh:faultMessage">
                    <sequence name="SystemFaultSeq">
                        <assign name="AssignFaultResponse">
                            <sxt:trace>
                                <sxt:log level="info" location="onStart">
                                    <from>'EntityComponentInternalUnsubscribeOrch.bpel - A system fault was encountered processing an unsubscribe message. Fault details follow...'</from>
                                </sxt:log>
                                <sxt:log level="warning" location="onStart">
                                    <from variable="systemFaultVar"/>
                                </sxt:log>
                            </sxt:trace>
                            <copy>
                                <from>'A fault occured processing an unsubscirbe.'</from>
                                <to>$UnsubscribeOut.UnsubscribeResponse/xsd:string
                                    <sxed:editor>
                                        <sxed:pseudoComp parentPath="$UnsubscribeOut.UnsubscribeResponse" type="xsd:string" qName="xsd:string" source="to"/>
                                    </sxed:editor>
                                </to>
                            </copy>
                        </assign>
                    </sequence>
                </catch>
            </faultHandlers>
            <sequence name="UnsubscribeSeq">
                <assign name="AssignGetRemoteSubscriptionReferencesInput">
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/ns0:Unsubscribe/ns0:subscriptionReference</from>
                        <to>$RetrieveByParentSubscriptionReferenceIn.RetrieveByParentSubscriptionReferenceMessage/ns0:SubscriptionReference</to>
                    </copy>
                </assign>
                <invoke name="InvokeGetRemoteSubscriptionReferences" partnerLink="SubRefRepPL" operation="RetrieveByParentSubscriptionReference" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" portType="tns:NhincComponentSubscriptionReferenceRepositoryPortType" inputVariable="RetrieveByParentSubscriptionReferenceIn" outputVariable="RetrieveByParentSubscriptionReferenceOut"/>
                <assign name="AssignSubscriptionReferenceCount">
                    <copy>
                        <from>count($RetrieveByParentSubscriptionReferenceOut.SubscriptionItems/ns0:subscriptionItem)</from>
                        <to variable="SubscriptionReferenceCount"/>
                    </copy>
                </assign>
                <if name="IfSubscriptionReferencesFound">
                    <condition>$SubscriptionReferenceCount &gt;= 0</condition>
                    <sequence name="SubRefsFoundSeq">
                        <forEach name="ForEachSubscriptionRef" parallel="no" counterName="SubRefCounter">
                            <startCounterValue>1</startCounterValue>
                            <finalCounterValue>$SubscriptionReferenceCount</finalCounterValue>
                            <scope name="ProcessSingleSubRefScope">
                                <variables>
                                    <variable name="NhincProxyUnsubscribeIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxysubscriptionmanagement" messageType="tns:UnsubscribeRequestMessage"/>
                                    <variable name="NhincProxyUnsubscribeOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxysubscriptionmanagement" messageType="tns:UnsubscribeResponseMessage"/>
                                </variables>
                                <faultHandlers>
                                    <catch faultName="sxeh:systemFault" faultVariable="systemFaultIndividualMsgVar" faultMessageType="sxeh:faultMessage">
                                        <empty name="LogSystemFault">
                                            <sxt:trace>
                                                <sxt:log level="info" location="onStart">
                                                    <from>'EntityComponentInternalUnsubscribeOrch.bpel - A system fault was encountered processing a single subscription reference for unsubscribe. Fault detials follow...'</from>
                                                </sxt:log>
                                                <sxt:log level="warning" location="onStart">
                                                    <from variable="systemFaultIndividualMsgVar"/>
                                                </sxt:log>
                                            </sxt:trace>
                                        </empty>
                                    </catch>
                                    <catchAll>
                                        <empty name="LogCatchAll">
                                            <sxt:trace>
                                                <sxt:log level="warning" location="onStart">
                                                    <from>'EntityComponentInternalUnsubscribeOrch.bpel - An unexpected fault was encountered processing a single subscription reference for unsubscribe.'</from>
                                                </sxt:log>
                                            </sxt:trace>
                                        </empty>
                                    </catchAll>
                                </faultHandlers>
                                <sequence name="ProcessSingleSubRefSeq">
                                    <empty name="TODO_PolicyCheck"/>
                                    <assign name="AssignNhincProxyInput">
                                        <copy>
                                            <from>$UnsubscribeIn.UnsubscribeRequest/ns1:assertion</from>
                                            <to>$NhincProxyUnsubscribeIn.UnsubscribeRequest/ns2:assertion</to>
                                        </copy>
                                        <copy>
                                            <from>$RetrieveByParentSubscriptionReferenceOut.SubscriptionItems/ns0:subscriptionItem[$SubRefCounter]/ns0:SubscriptionReference</from>
                                            <to>$NhincProxyUnsubscribeIn.UnsubscribeRequest/ns2:unsubscribe/ns0:subscriptionReference</to>
                                        </copy>
                                        <copy>
                                            <from>$RetrieveByParentSubscriptionReferenceOut.SubscriptionItems/ns0:subscriptionItem[$SubRefCounter]/ns0:Subscribee/ns0:Community/ns0:Id
                                                <sxed:editor>
                                                    <sxed:predicate path="$RetrieveByParentSubscriptionReferenceOut.SubscriptionItems/ns0:subscriptionItem[$SubRefCounter]" source="from"/>
                                                </sxed:editor>
                                            </from>
                                            <to>$NhincProxyUnsubscribeIn.UnsubscribeRequest/ns2:nhinTargetSystem/ns4:homeCommunity/ns4:homeCommunityId</to>
                                        </copy>
                                    </assign>
                                    <invoke name="InvokeProxyUnsubscribe" partnerLink="NhincProxySubscriptionMgmtPL" operation="Unsubscribe" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxysubscriptionmanagement" portType="tns:NhincProxySubscriptionManagerPortType" inputVariable="NhincProxyUnsubscribeIn" outputVariable="NhincProxyUnsubscribeOut"/>
                                    <assign name="AssignDeleteChildSubscriptionRefInput">
                                        <sxt:trace>
                                            <sxt:log level="info" location="onStart">
                                                <from variable="NhincProxyUnsubscribeOut"/>
                                            </sxt:log>
                                        </sxt:trace>
                                        <copy>
                                            <from>$RetrieveByParentSubscriptionReferenceOut.SubscriptionItems/ns0:subscriptionItem/ns0:SubscriptionReference</from>
                                            <to>$DeleteSubscriptionReferenceIn.DeleteSubscriptionMessage/ns0:SubscriptionReference</to>
                                        </copy>
                                    </assign>
                                    <invoke name="InvokeDeleteChildSubscriptionRef" partnerLink="SubRefRepPL" operation="DeleteSubscriptionReference" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" portType="tns:NhincComponentSubscriptionReferenceRepositoryPortType" inputVariable="DeleteSubscriptionReferenceIn" outputVariable="DeleteSubscriptionReferenceOut">
                                        <sxt:trace>
                                            <sxt:log level="info" location="onStart">
                                                <from>'### Deteting child subscription reference'</from>
                                            </sxt:log>
                                        </sxt:trace>
                                    </invoke>
                                    <empty name="LogDeleteChildSubRefResults">
                                        <sxt:trace>
                                            <sxt:log level="info" location="onStart">
                                                <from variable="DeleteSubscriptionReferenceOut"/>
                                            </sxt:log>
                                            <sxt:log level="warning" location="onStart">
                                                <from>'Child subscription reference deleted - message follows...'</from>
                                            </sxt:log>
                                        </sxt:trace>
                                    </empty>
                                </sequence>
                            </scope>
                        </forEach>
                        <assign name="AssignDeleteParentSubscriptionRefInput">
                            <copy>
                                <from>$UnsubscribeIn.UnsubscribeRequest/ns0:Unsubscribe/ns0:subscriptionReference</from>
                                <to>$DeleteSubscriptionReferenceIn.DeleteSubscriptionMessage/ns0:SubscriptionReference</to>
                            </copy>
                        </assign>
                        <invoke name="InvokeDeleteParentSubscriptionRef" partnerLink="SubRefRepPL" operation="DeleteSubscriptionReference" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" portType="tns:NhincComponentSubscriptionReferenceRepositoryPortType" inputVariable="DeleteSubscriptionReferenceIn" outputVariable="DeleteSubscriptionReferenceOut">
                            <sxt:trace>
                                <sxt:log level="info" location="onStart">
                                    <from>'### Deleting parent subscription reference'</from>
                                </sxt:log>
                            </sxt:trace>
                        </invoke>
                    </sequence>
                </if>
                <assign name="AssignCreateUnsubscribeResponseInput">
                    <copy>
                        <from>'not used'</from>
                        <to>$CreateUnsubscribeResponseIn.CreateUnsubscribeResponse/ns0:Empty/ns0:notUsed</to>
                    </copy>
                </assign>
                <invoke name="InvokeCreateUnsubscribeResponse" partnerLink="SubscriptionDtePL" operation="CreateUnsubscribeResponse" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" portType="tns:NhincComponentInternalSubscriptionDtePortType" inputVariable="CreateUnsubscribeResponseIn" outputVariable="CreateUnsubscribeResponseOut"/>
                <assign name="AssignCreateUnsubscribeResponseOutput">
                    <copy>
                        <from>$CreateUnsubscribeResponseOut.CreateUnsubscribeResponse/ns3:UnsubscribeResponse</from>
                        <to variable="UnsubscribeOut" part="UnsubscribeResponse"/>
                    </copy>
                </assign>
            </sequence>
        </scope>
        <reply name="ReplyUnsubscribeInternal" partnerLink="EntityUnsubscribeInternalPL" operation="Unsubscribe" xmlns:tns="urn:gov:hhs:fha:nhinc:entitycomponentinternalunsubscribeorch" portType="tns:EntityComponentInternalUnsubscribeOrchPortType" variable="UnsubscribeOut"/>
    </sequence>
</process>
