<?xml version="1.0" encoding="UTF-8"?>
<process
    name="NhincComponentInternalSubDiscovery201302Orch"
    targetNamespace="urn:gov:hhs:fha:nhinc:gateway:nhincinternalorchbpel:nhinccomponentinternalsubdiscovery201302"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling"
    xmlns:tns="urn:gov:hhs:fha:nhinc:gateway:nhincinternalorchbpel:nhinccomponentinternalsubdiscovery201302"
    xmlns:hl7="urn:hl7-org:v3"
    xmlns:ncpc="urn:gov:hhs:fha:nhinc:common:patientcorrelationfacade" 
    xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon" 
    xmlns:conninfo="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" 
    xmlns:evtcmn="urn:gov:hhs:fha:nhinc:common:eventcommon" 
    xmlns:nccommonadapter="urn:gov:hhs:fha:nhinc:common:nhinccommonadapter" 
    xmlns:xacml="urn:oasis:names:tc:xacml:2.0:context:schema:os" 
    xmlns:propacc="urn:gov:hhs:fha:nhinc:common:propertyaccess" xmlns:ns0="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentinternalsubdiscovery201302orch" location="Interfaces/wsdl/NhincComponentInternalSubDiscovery201302Orch.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" location="Interfaces/wsdl/NhincComponentSubDiscTransforms.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:componentpatientcorrelationfacade" location="Interfaces/wsdl/NhincComponentPatientCorrelationFacade.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" location="Interfaces/wsdl/NhincComponentConnectionManager.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:NhincComponentInternalPolicyEngineFacade" location="Interfaces/wsdl/NhincComponentInternalPolicyEngineFacade.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:adaptermpi" location="Interfaces/wsdl/AdapterMpi.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" location="Interfaces/wsdl/NhincComponentPropAccessor.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <partnerLink name="PolicyEngineFacadePL" xmlns:tns="urn:gov:hhs:fha:nhinc:NhincComponentInternalPolicyEngineFacade" partnerLinkType="tns:NhincComponentInternalPolicyEngineFacade" partnerRole="NhincComponentInternalPolicyEngineFacadePortTypeRole"/>
        <partnerLink name="PropertyAccessorPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" partnerLinkType="tns:NhincComponentPropAccessor" partnerRole="NhincComponentPropAccessorPortTypeRole"/>
        <partnerLink name="MpiPL" xmlns:tns="urn:gov:hhs:fha:nhinc:adaptermpi" partnerLinkType="tns:AdapterMpiService" partnerRole="AdapterMpiPortTypeRole"/>
        <partnerLink name="SubDiscDataTransformsPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" partnerLinkType="tns:NhincComponentSubDiscTransforms" partnerRole="NhincComponentSubDiscTransformsPortTypeRole"/>
        <partnerLink name="ConnectionMgrPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" partnerLinkType="tns:NhincComponentConnectionManager" partnerRole="NhincComponentConnectionManagerPortTypeRole"/>
        <partnerLink name="PatientCorrelationPL" xmlns:tns="urn:gov:hhs:fha:nhinc:componentpatientcorrelationfacade" partnerLinkType="tns:PatientCorrelationFacadePartnerLinkType" partnerRole="PatientCorrelationPortTypeRole"/>
        <partnerLink name="NhincComponentInternalSubDiscOrchPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalsubdiscovery201302orch" partnerLinkType="tns:NhincComponentInternalSubDiscovery201302Orch" myRole="NhincComponentInternalSubDiscovery201302OrchPortTypeRole"/>
    </partnerLinks>
    <variables>
        <variable name="AnnounceRevisedPatientOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalsubdiscovery201302orch" messageType="tns:AnnounceRevisedPatientResponseMessage"/>
        <variable name="AnnounceRevisedPatientIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalsubdiscovery201302orch" messageType="tns:AnnounceRevisedPatientRequestMessage"/>
    </variables>
    <sequence>
        <receive name="ReceiveNhincComponentInternalSubDiscOrch" createInstance="yes" partnerLink="NhincComponentInternalSubDiscOrchPL" operation="AnnounceRevisedPatient" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalsubdiscovery201302orch" portType="tns:NhincComponentInternalSubDiscovery201302OrchPortType" variable="AnnounceRevisedPatientIn"/>
        <scope name="NhincComponentInternalSubDiscOrchScope">
            <variables>
                <variable name="FindCandidatesOut" xmlns:tns="urn:gov:hhs:fha:nhinc:adaptermpi" messageType="tns:FindCandidatesResponse"/>
                <variable name="FindCandidatesIn" xmlns:tns="urn:gov:hhs:fha:nhinc:adaptermpi" messageType="tns:FindCandidatesRequest"/>
                <variable name="GetLocalHcidPropOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" messageType="tns:GetPropertyResponseMessage"/>
                <variable name="GetLocalHcidPropIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" messageType="tns:GetPropertyRequestMessage"/>
                <variable name="GetMpiEndPtOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:GetConnectionInfoEndpointByServiceNameResponseMessage"/>
                <variable name="GetMpiEndPtIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:GetConnectionInfoEndpointByServiceNameRequestMessage"/>
                <variable name="Create201305Out" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" messageType="tns:Create201305ResponseMessage"/>
                <variable name="Create201305In" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" messageType="tns:Create201305RequestMessage"/>
                <variable name="CheckPolicySubjectRevisedOut" xmlns:tns="urn:gov:hhs:fha:nhinc:NhincComponentInternalPolicyEngineFacade" messageType="tns:CheckPolicyResponseMessage"/>
                <variable name="CheckPolicySubjectRevisedIn" xmlns:tns="urn:gov:hhs:fha:nhinc:NhincComponentInternalPolicyEngineFacade" messageType="tns:CheckPolicySubjectRevisedRequestMessage"/>
                <variable name="StoreAAToHCIDOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:StoreAssigningAuthorityToHomeCommunityMappingResponseMessage"/>
                <variable name="StoreAAToHCIDIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:StoreAssigningAuthorityToHomeCommunityMappingRequestMessage"/>
                <variable name="localPatId" type="xsd:string"/>
                <variable name="localAssignAuthId" type="xsd:string"/>
                <variable name="CreateAckOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" messageType="tns:CreateAckResponseMessage"/>
                <variable name="CreateAckIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" messageType="tns:CreateAckRequestMessage"/>
                <variable name="AddPatientCorrelationOut" xmlns:tns="urn:gov:hhs:fha:nhinc:componentpatientcorrelationfacade" messageType="tns:AddPatientCorrelationResponseMessage"/>
                <variable name="AddPatientCorrelationIn" xmlns:tns="urn:gov:hhs:fha:nhinc:componentpatientcorrelationfacade" messageType="tns:AddPatientCorrelationRequestMessage"/>
            </variables>
            <faultHandlers>
                <catch faultName="sxeh:systemFault" faultVariable="systemFaultVar" faultMessageType="sxeh:faultMessage">
                    <sequence name="SystemFaultSeq">
                        <assign name="AssignFaultAckDte">
                            <sxt:trace>
                                <sxt:log level="info" location="onStart">
                                    <from>'NhinComponentInternalSubDiscovery201302Orch.bpel - A system fault was encounterd processing a 201302 message. Fault detials follow...'</from>
                                </sxt:log>
                                <sxt:log level="warning" location="onStart">
                                    <from variable="systemFaultVar"/>
                                </sxt:log>
                            </sxt:trace>
                            <copy>
                                <from>$AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:id</from>
                                <to>$CreateAckIn.CreateAckRequest/hl7:origMsgId</to>
                            </copy>
                            <copy>
                                <from>'Error - Internal Gateway Error'</from>
                                <to>$CreateAckIn.CreateAckRequest/hl7:msgText</to>
                            </copy>
                            <copy>
                                <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:receiver/hl7:device/hl7:id/@root)</from>
                                <to>$CreateAckIn.CreateAckRequest/hl7:senderOID</to>
                            </copy>
                            <copy>
                                <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:sender/hl7:device/hl7:id/@root)</from>
                                <to>$CreateAckIn.CreateAckRequest/hl7:receiverOID</to>
                            </copy>
                        </assign>
                        <invoke name="InvokeFaultAckDte" partnerLink="SubDiscDataTransformsPL" operation="CreateAck" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" portType="tns:NhincComponentSubDiscTransformsPortType" inputVariable="CreateAckIn" outputVariable="CreateAckOut"/>
                        <assign name="AssignFaultInfo">
                            <copy>
                                <from variable="CreateAckOut" part="CreateAckResponse"/>
                                <to variable="AnnounceRevisedPatientOut" part="AnnounceRevisedPatientResponse"/>
                            </copy>
                        </assign>
                        <reply name="ReplyNhincComponentInternalSubDiscOrchFault" partnerLink="NhincComponentInternalSubDiscOrchPL" operation="AnnounceRevisedPatient" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalsubdiscovery201302orch" portType="tns:NhincComponentInternalSubDiscovery201302OrchPortType" variable="AnnounceRevisedPatientOut"/>
                        <exit name="ExitAfterFaultReturn"/>
                    </sequence>
                </catch>
            </faultHandlers>
            <sequence name="NhincComponentInternalSubDiscOrchSequence">
    <!--            <assign name="AssignPolicyEngineInput">
                    <copy>
                        <from variable="AnnounceRevisedPatientIn" part="AnnounceRevisedPatientRequest"/>
                        <to>$CheckPolicySubjectRevisedIn.CheckPolicySubjectRevisedRequest/evtcmn:message</to>
                    </copy>
                    <copy>
                        <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:sender/hl7:device/hl7:id/@root)</from>
                        <to>$CheckPolicySubjectRevisedIn.CheckPolicySubjectRevisedRequest/evtcmn:sendingHomeCommunity/nccommon:homeCommunityId</to>
                    </copy>
                    <copy>
                        <from>'Inbound'</from>
                        <to>$CheckPolicySubjectRevisedIn.CheckPolicySubjectRevisedRequest/evtcmn:direction</to>
                    </copy>
                </assign>
                <invoke name="InvokePolicyEngine" partnerLink="PolicyEngineFacadePL" operation="CheckPolicySubjectRevised" xmlns:tns="urn:gov:hhs:fha:nhinc:NhincComponentInternalPolicyEngineFacade" portType="tns:NhincComponentInternalPolicyEngineFacadePortType" inputVariable="CheckPolicySubjectRevisedIn" outputVariable="CheckPolicySubjectRevisedOut"/>
                <if name="IfPolicyValid">
                    <condition>'Permit' = $CheckPolicySubjectRevisedOut.CheckPolicyResponse/nccommonadapter:response/xacml:Result/xacml:Decision</condition>
                   -->
                   <sequence name="ValidPolicySeq">
                        <!-- For now assume 1 id per asOtherIds and that only SSN
                             and remote Patient Id would be included.
                             Will need to revisit, may want to replace
                             with a call to the MPI instead -->
                        <assign name="AssignStoreAAToHcid">
                            <copy>
                                <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:id/@root)</from>
                                <to>$StoreAAToHCIDIn.StoreAssigningAuthorityToHomeCommunityMappingRequest/conninfo:AssigningAuthority/nccommon:assigningAuthorityId</to>
                            </copy>
                            <copy>
                                <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:sender/hl7:device/hl7:id/@root)</from>
                                <to>$StoreAAToHCIDIn.StoreAssigningAuthorityToHomeCommunityMappingRequest/conninfo:HomeCommunity/nccommon:homeCommunityId</to>
                            </copy>
                        </assign>
                        <invoke name="InvokeStoreAAToHcid" partnerLink="ConnectionMgrPL" operation="StoreAssigningAuthorityToHomeCommunityMapping" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" portType="tns:NhincComponentConnectionManagerPortType" inputVariable="StoreAAToHCIDIn" outputVariable="StoreAAToHCIDOut"/>
                        <assign name="AssignGetLocalHcid">
                            <copy>
                                <from>'gateway'</from>
                                <to>$GetLocalHcidPropIn.GetPropertyRequest/propacc:propertyFile</to>
                            </copy>
                            <copy>
                                <from>'localHomeCommunityId'</from>
                                <to>$GetLocalHcidPropIn.GetPropertyRequest/propacc:propertyName</to>
                            </copy>
                        </assign>
                        <invoke name="InvokeGetLocalHcid" partnerLink="PropertyAccessorPL" operation="GetProperty" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" portType="tns:NhincComponentPropAccessorPortType" inputVariable="GetLocalHcidPropIn" outputVariable="GetLocalHcidPropOut"/>
                        <assign name="AssignCreate201305">
                            <copy>
                                <from>$AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:id</from>
                                <to>$Create201305In.Create201305Request/hl7:PRPA201301Patient/hl7:id</to>
                            </copy>
                            <copy>
                                <from>$AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:patientPerson/hl7:name</from>
                                <to>$Create201305In.Create201305Request/hl7:PRPA201301Patient/hl7:patientPerson/hl7:name</to>
                            </copy>
                            <copy>
                                <from>$GetLocalHcidPropOut.GetPropertyResponse/propacc:propertyValue</from>
                                <to>$Create201305In.Create201305Request/hl7:senderOID</to>
                            </copy>
                            <copy>
                                <from>$GetLocalHcidPropOut.GetPropertyResponse/propacc:propertyValue</from>
                                <to>$Create201305In.Create201305Request/hl7:receiverOID</to>
                            </copy>
                        </assign>
                        <invoke name="InvokeCreate201305" partnerLink="SubDiscDataTransformsPL" operation="Create201305" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" portType="tns:NhincComponentSubDiscTransformsPortType" inputVariable="Create201305In" outputVariable="Create201305Out"/>
                        <assign name="AssignGetMpiEndPt">
                            <copy>
                                <from>$GetLocalHcidPropOut.GetPropertyResponse/propacc:propertyValue</from>
                                <to>$GetMpiEndPtIn.GetConnectionInfoEndpointByServiceNameRequest/conninfo:homeCommunityWithServiceName/conninfo:homeCommunity/nccommon:homeCommunityId</to>
                            </copy>
                            <copy>
                                <from>'mpi'</from>
                                <to>$GetMpiEndPtIn.GetConnectionInfoEndpointByServiceNameRequest/conninfo:homeCommunityWithServiceName/conninfo:serviceName</to>
                            </copy>
                        </assign>
                        <invoke name="InvokeGetMpiEndPt" partnerLink="ConnectionMgrPL" operation="GetConnectionInfoEndpointByServiceName" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" portType="tns:NhincComponentConnectionManagerPortType" inputVariable="GetMpiEndPtIn" outputVariable="GetMpiEndPtOut"/>
                        <assign name="AssignMpi">
                            <copy>
                                <from>$AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:assertion</from>
                                <to>$FindCandidatesIn.FindCandidatesRequest/hl7:assertion</to>
                            </copy>
                            <copy>
                                <from variable="Create201305Out" part="Create201305Response"/>
                                <to>$FindCandidatesIn.FindCandidatesRequest/hl7:PRPA_IN201305UV</to>
                            </copy>
                            <copy>
                                <from>ns0:doXslTransform('urn:stylesheets:wrap2serviceref.xsl', $GetMpiEndPtOut.ConnectionInfoEndpoint/conninfo:serviceConnectionInfoEndpoints/conninfo:serviceConnectionInfoEndpoint/nccommon:EPR/nccommon:EndpointReference)</from>
                                <to partnerLink="MpiPL"/>
                            </copy> 
                        </assign>
                        <invoke name="InvokeMpi" partnerLink="MpiPL" operation="FindCandidates" xmlns:tns="urn:gov:hhs:fha:nhinc:adaptermpi" portType="tns:AdapterMpiPortType" inputVariable="FindCandidatesIn" outputVariable="FindCandidatesOut"/>
                        <if name="IfPatientFound">
                            <condition>$Create201305Out.Create201305Response/hl7:controlActProcess != 0</condition>
                            <forEach name="ForEachOtherId" parallel="no" counterName="OtherIdCtr">
                                <startCounterValue>1</startCounterValue>
                                <finalCounterValue>count($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:patientPerson/hl7:asOtherIDs)</finalCounterValue>
                                <scope name="localPatIdSearchScope">
                                    <if name="IfMatch">
                                        <condition>$AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:patientPerson/hl7:asOtherIDs/hl7:id/@root = $FindCandidatesOut.FindCandidatesResponse/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:id/@root and $AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:patientPerson/hl7:asOtherIDs/hl7:id/@extension = $FindCandidatesOut.FindCandidatesResponse/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:id/@extension</condition>
                                        <sequence name="PatientIdMatchSeq">
                                            <assign name="AssignLocalPatId">
                                                <copy>
                                                    <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:patientPerson/hl7:asOtherIDs[$OtherIdCtr]/hl7:id/@root)
                                                        <sxed:editor>
                                                            <sxed:predicate path="$AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:patientPerson/hl7:asOtherIDs[$OtherIdCtr]" source="from"/>
                                                        </sxed:editor>
                                                    </from>
                                                    <to variable="localAssignAuthId"/>
                                                </copy>
                                                <copy>
                                                    <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:patientPerson/hl7:asOtherIDs[$OtherIdCtr]/hl7:id/@extension)
                                                        <sxed:editor>
                                                            <sxed:predicate path="$AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:patientPerson/hl7:asOtherIDs[$OtherIdCtr]" source="from"/>
                                                        </sxed:editor>
                                                    </from>
                                                    <to variable="localPatId"/>
                                                </copy>
                                            </assign>
                                            <assign name="AssignPatientCorrelation">
                                                <copy>
                                                    <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:patientPerson/hl7:asOtherIDs/hl7:id/@root)</from>
                                                    <to>$AddPatientCorrelationIn.AddPatientCorrelationRequest/ncpc:QualifiedPatientIdentifier[1]/nccommon:AssigningAuthorityIdentifier</to>
                                                </copy>
                                                <copy>
                                                    <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:patientPerson/hl7:asOtherIDs/hl7:id/@extension)</from>
                                                    <to>$AddPatientCorrelationIn.AddPatientCorrelationRequest/ncpc:QualifiedPatientIdentifier[1]/nccommon:SubjectIdentifier</to>
                                                </copy>
                                                <copy>
                                                    <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:id/@root)</from>
                                                    <to>$AddPatientCorrelationIn.AddPatientCorrelationRequest/ncpc:QualifiedPatientIdentifier[2]/nccommon:AssigningAuthorityIdentifier</to>
                                                </copy>
                                                <copy>
                                                    <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:controlActProcess/hl7:subject/hl7:registrationEvent/hl7:subject1/hl7:patient/hl7:id/@extension)</from>
                                                    <to>$AddPatientCorrelationIn.AddPatientCorrelationRequest/ncpc:QualifiedPatientIdentifier[2]/nccommon:SubjectIdentifier</to>
                                                </copy>
                                                <copy>
                                                    <from variable="localPatId"/>
                                                    <to>$AddPatientCorrelationIn.AddPatientCorrelationRequest/ncpc:QualifiedPatientIdentifier[1]/nccommon:SubjectIdentifier
                                                        <sxed:editor>
                                                            <sxed:predicate path="$AddPatientCorrelationIn.AddPatientCorrelationRequest/ncpc:QualifiedPatientIdentifierPair/ncpc:QualifiedPatientIdentifier[1]" source="to"/>
                                                        </sxed:editor>
                                                    </to>
                                                </copy>
                                                <copy>
                                                    <from variable="localAssignAuthId"/>
                                                    <to>$AddPatientCorrelationIn.AddPatientCorrelationRequest/ncpc:QualifiedPatientIdentifier[1]/nccommon:AssigningAuthorityIdentifier
                                                        <sxed:editor>
                                                            <sxed:predicate path="$AddPatientCorrelationIn.AddPatientCorrelationRequest/ncpc:QualifiedPatientIdentifierPair/ncpc:QualifiedPatientIdentifier[1]" source="to"/>
                                                        </sxed:editor>
                                                    </to>
                                                </copy>
                                            </assign>
                                            <invoke name="InvokePatientCorrelation" partnerLink="PatientCorrelationPL" operation="AddPatientCorrelation" xmlns:tns="urn:gov:hhs:fha:nhinc:componentpatientcorrelationfacade" portType="tns:PatientCorrelationFacadePortType" inputVariable="AddPatientCorrelationIn" outputVariable="AddPatientCorrelationOut"/>
                                            <assign name="AssignSuccessAckDte">
                                                <copy>
                                                    <from>$AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:id</from>
                                                    <to>$CreateAckIn.CreateAckRequest/hl7:origMsgId</to>
                                                </copy>
                                                <copy>
                                                    <from>'Success'</from>
                                                    <to>$CreateAckIn.CreateAckRequest/hl7:msgText</to>
                                                </copy>
                                                <copy>
                                                    <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:receiver/hl7:device/hl7:id/@root)</from>
                                                    <to>$CreateAckIn.CreateAckRequest/hl7:senderOID</to>
                                                </copy>
                                                <copy>
                                                    <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:sender/hl7:device/hl7:id/@root)</from>
                                                    <to>$CreateAckIn.CreateAckRequest/hl7:receiverOID</to>
                                                </copy>
                                            </assign>
                                            <invoke name="InvokeSuccessAckDte" partnerLink="SubDiscDataTransformsPL" operation="CreateAck" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" portType="tns:NhincComponentSubDiscTransformsPortType" inputVariable="CreateAckIn" outputVariable="CreateAckOut"/>
                                        </sequence>
                                        <else>
                                            <sequence name="PatientIdsDoNotMatchSeq">
                                                <assign name="AssignCreatePatIdsNoMatchAck">
                                                    <copy>
                                                        <from>'Patient Not Found'</from>
                                                        <to>$CreateAckIn.CreateAckRequest/hl7:msgText</to>
                                                    </copy>
                                                    <copy>
                                                        <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:receiver/hl7:device/hl7:id/@root)</from>
                                                        <to>$CreateAckIn.CreateAckRequest/hl7:senderOID</to>
                                                    </copy>
                                                    <copy>
                                                        <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:sender/hl7:device/hl7:id/@root)</from>
                                                        <to>$CreateAckIn.CreateAckRequest/hl7:receiverOID</to>
                                                    </copy>
                                                    <copy>
                                                        <from>$AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:id</from>
                                                        <to>$CreateAckIn.CreateAckRequest/hl7:origMsgId</to>
                                                    </copy>
                                                </assign>
                                                <invoke name="InvokeCreatePatIdsNoMatchAck" partnerLink="SubDiscDataTransformsPL" operation="CreateAck" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" portType="tns:NhincComponentSubDiscTransformsPortType" inputVariable="CreateAckIn" outputVariable="CreateAckOut"/>
                                            </sequence>
                                        </else>
                                    </if>
                                </scope>
                            </forEach>
                            <else>
                                <sequence name="PatientNotFoundSeq">
                                    <assign name="AssignCreatePatientNotFoundAck">
                                        <copy>
                                            <from>$AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:id</from>
                                            <to>$CreateAckIn.CreateAckRequest/hl7:origMsgId</to>
                                        </copy>
                                        <copy>
                                            <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:receiver/hl7:device/hl7:id/@root)</from>
                                            <to>$CreateAckIn.CreateAckRequest/hl7:senderOID</to>
                                        </copy>
                                        <copy>
                                            <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:sender/hl7:device/hl7:id/@root)</from>
                                            <to>$CreateAckIn.CreateAckRequest/hl7:receiverOID</to>
                                        </copy>
                                        <copy>
                                            <from>'Patient Not Found'</from>
                                            <to>$CreateAckIn.CreateAckRequest/hl7:msgText</to>
                                        </copy>
                                    </assign>
                                    <invoke name="InvokeCreatePatientNotFoundAck" partnerLink="SubDiscDataTransformsPL" operation="CreateAck" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" portType="tns:NhincComponentSubDiscTransformsPortType" inputVariable="CreateAckIn" outputVariable="CreateAckOut"/>
                                </sequence>
                            </else>
                        </if>
                    </sequence>
               
              <!-- <else>
                        <sequence name="InvalidPolicySeq">
                            <assign name="AssignPolicyInvalidAckDte">
                                <copy>
                                    <from>$AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:id</from>
                                    <to>$CreateAckIn.CreateAckRequest/hl7:origMsgId</to>
                                </copy>
                                <copy>
                                    <from>'Error - Policy Check Failed'</from>
                                    <to>$CreateAckIn.CreateAckRequest/hl7:msgText</to>
                                </copy>
                                <copy>
                                    <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:receiver/hl7:device/hl7:id/@root)</from>
                                    <to>$CreateAckIn.CreateAckRequest/hl7:senderOID</to>
                                </copy>
                                <copy>
                                    <from>string($AnnounceRevisedPatientIn.AnnounceRevisedPatientRequest/hl7:PRPA_IN201302UV/hl7:sender/hl7:device/hl7:id/@root)</from>
                                    <to>$CreateAckIn.CreateAckRequest/hl7:receiverOID</to>
                                </copy>
                            </assign>
                            <invoke name="InvokePolicyInvalidAckDte" partnerLink="SubDiscDataTransformsPL" operation="CreateAck" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubdisctransforms" portType="tns:NhincComponentSubDiscTransformsPortType" inputVariable="CreateAckIn" outputVariable="CreateAckOut"/>
                        </sequence>
                    </else>
                </if>  -->
                <assign name="AssignResp">
                    <copy>
                        <from variable="CreateAckOut" part="CreateAckResponse"/>
                        <to variable="AnnounceRevisedPatientOut" part="AnnounceRevisedPatientResponse"/>
                    </copy>
                </assign>
            </sequence>
        </scope>
        <reply name="ReplyNhincComponentInternalSubDiscOrch" partnerLink="NhincComponentInternalSubDiscOrchPL" operation="AnnounceRevisedPatient" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalsubdiscovery201302orch" portType="tns:NhincComponentInternalSubDiscovery201302OrchPortType" variable="AnnounceRevisedPatientOut"/>
    </sequence>
</process>
