<!-- AggregationTutorialFlowN BPEL Process [Generated by the Oracle BPEL Designer]  -->
<process name="AggregationTutorialFlowN" targetNamespace="http://acm.org/samples/aggregation-tutorial" suppressJoinFailure="yes" xmlns:tns="http://acm.org/samples/aggregation-tutorial" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:nsxml0="http://acm.org/samples/aggregation-tutorial-partinfo">
	<!-- ================================================================= -->
	<!-- PARTNERLINKS                                                      -->
	<!-- List of services participating in this BPEL process               -->
	<!-- ================================================================= -->
	<partnerLinks>
		<!--
        The 'client' role represents the requester of this service. It is 
        used for callback. The location and correlation information associated
        with the client role are automatically set using WS-Addressing.
        -->
		<partnerLink name="client" partnerLinkType="tns:AggregationTutorial" myRole="AggregationTutorialProvider" partnerRole="AggregationTutorialRequester"/>
	</partnerLinks>
	<!-- ================================================================= -->
	<!-- VARIABLES                                                         -->
	<!-- List of messages and XML documents used within this BPEL process  -->
	<!-- ================================================================= -->
	<variables>
		<!-- Reference to the message passed as input during initiation -->
		<variable name="input" messageType="tns:AggregationTutorialRequestMessage"/>
		<!-- Reference to the message that will be sent back to the 
             requester during callback
             -->
		<variable name="output" messageType="tns:AggregationTutorialResponseMessage"/>
		<variable name="countVariable" type="xsd:int"/>
	</variables>
	<!-- ================================================================= -->
	<!-- ORCHESTRATION LOGIC                                               -->
	<!-- Set of activities coordinating the flow of messages across the    -->
	<!-- services integrated within this business process                  -->
	<!-- ================================================================= -->
	<sequence name="main">
		<!-- Receive input from requestor. 
             Note: This maps to operation defined in AggregationTutorial.wsdl 
             -->
		<receive name="receiveInput" partnerLink="client" portType="tns:AggregationTutorial" operation="initiate" variable="input" createInstance="yes"/>
		<assign name="assign-1">
			<copy>
				<from expression="count(bpws:getVariableData('input','payload')/tns:partInfoRequest)"></from>
				<to variable="countVariable"/>
			</copy>
			<copy>
				<from>
					<tns:AggregationTutorialResponse />
				</from> 
				<to variable="output" part="payload" /> 
			</copy> 
		</assign>
		<bpelx:flowN N="bpws:getVariableData('countVariable')" indexVariable="idx">
			<scope name="scope-1">
				<partnerLinks>
					<partnerLink name="partInfoLink" partnerLinkType="nsxml0:AggregationTutorialPartInfoService" partnerRole="AggregationTutorialPartInfoServiceProvider" myRole="AggregationTutorialPartInfoServiceRequester"/>
				</partnerLinks>
				<variables>
					<variable name="partInfoReqVar" messageType="nsxml0:AggregationTutorialPartInfoServiceRequestMessage"/>
					<variable name="partInfoResultVar" messageType="nsxml0:AggregationTutorialPartInfoServiceResponseMessage"/>
				</variables>
				<sequence name="sequence-1">
					<assign name="assign-2">
						<copy>
							<from expression="bpws:getVariableData('input','payload')/tns:partInfoRequest[bpws:getVariableData('idx')]"></from>
							<to variable="partInfoReqVar" part="payload"/>
						</copy>
					</assign>
					<invoke partnerLink="partInfoLink" portType="nsxml0:AggregationTutorialPartInfoService" name="invoke-1" operation="initiate" inputVariable="partInfoReqVar"/>
					<receive name="receive-1" partnerLink="partInfoLink" portType="nsxml0:AggregationTutorialPartInfoServiceCallback" operation="onResult" variable="partInfoResultVar"/>
					<assign name="assign-3">
						<bpelx:append>
							<bpelx:from variable="partInfoResultVar" part="payload" />
							<bpelx:to variable="output" part="payload" />
						</bpelx:append>
						<!-- Please addChildNode() function if you are using OracleBPEL version 2.1 or before -->
						<!--
						<copy>
							<from expression="ora:addChildNode(bpws:getVariableData('output', 'payload'), bpws:getVariableData('partInfoResultVar','payload'))" />
							<to variable="output" part="payload"/>
						</copy> 
						-->
					</assign>
				</sequence>
			</scope>
		</bpelx:flowN> 
		<!-- Asynchronous callback to the requester.
             Note: the callback location and correlation id is transparently handled 
             using WS-addressing.
             -->
		<invoke name="callbackClient" partnerLink="client" portType="tns:AggregationTutorialCallback" operation="onResult" inputVariable="output"/>
	</sequence>
</process>
